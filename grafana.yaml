apiVersion: v1
kind: Namespace
metadata:
  name: tanzu-system-monitoring
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana-extension-sa
  namespace: tanzu-system-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: grafana-extension-role
  namespace: tanzu-system-monitoring
rules:
- apiGroups: [ "*" ]
  resources: [ "*" ]
  verbs: [ "*" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: grafana-extension-rolebinding
  namespace: tanzu-system-monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: grafana-extension-role
subjects:
- kind: ServiceAccount
  name: grafana-extension-sa
  namespace: tanzu-system-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: grafana-extension-cluster-role
rules:
- apiGroups: [ "*" ]
  resources: [ "clusterroles", "clusterrolebindings" ]
  verbs: [ "*" ]
- apiGroups: [ "" ]
  resources: [ "namespaces" ]
  verbs: [ "list" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: grafana-extension-cluster-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: grafana-extension-cluster-role
subjects:
- kind: ServiceAccount
  name: grafana-extension-sa
  namespace: tanzu-system-monitoring
---
apiVersion: kappctrl.k14s.io/v1alpha1
kind: App
metadata:
  name: grafana
  namespace: tanzu-system-monitoring
  annotations:
    tmc.cloud.vmware.com/managed: "false"
spec:
  syncPeriod: 30s
  serviceAccountName: grafana-extension-sa
  fetch:
  - image:
      url: projects.registry.vmware.com/tkg/tkg-extensions-templates:v1.3.1_vmware.1
  template:
  - ytt:
      ignoreUnknownComments: true
      paths:
      - tkg-extensions/common
      - tkg-extensions/monitoring/grafana
      inline:
        paths:
          replace-default-dashboard.yaml: |
            #@ load("@ytt:data", "data")
            #@ load("@ytt:overlay", "overlay")
            #@overlay/match by=overlay.subset({"kind":"ConfigMap", "metadata": {"name": "grafana-default-dashboard"}})
            ---
            data:
              default.json: #@ data.values.dashboards.default_json
            #@overlay/match by=overlay.subset({"kind":"ConfigMap", "metadata": {"name": "grafana-dashboard-apiserver"}})
            ---
            data:
              kubernetes-apiserver.json: #@ data.values.dashboards.kubernetes_apiserver_json
          node-exporter-dashboard.yaml: |
            #@ load("@ytt:data", "data")
            ---
            apiVersion: v1
            kind: ConfigMap
            metadata:
              name: grafana-node-exporter-dashboard
              namespace: tanzu-system-monitoring
              labels:
                grafana_dashboard: "1"
                app: grafana
            data:
              system_disk_performance.json: #@ data.values.dashboards.system_disk_performance_json.replace("${DS_PROMETHEUS}", "Prometheus")
              system_disk_space.json: #@ data.values.dashboards.system_disk_space_json.replace("${DS_PROMETHEUS}", "Prometheus")
              system_overview.json: #@ data.values.dashboards.system_overview_json.replace("${DS_PROMETHEUS}", "Prometheus")
        pathsFrom:
        - secretRef:
            name: grafana-data-values
        - secretRef:
            name: grafana-node-exporter-dashboard-values
  deploy:
  - kapp:
      rawOptions:
      - --wait-timeout=5m
      - --diff-changes=true
      - --diff-mask=false
      inspect:
        rawOptions:
        - --tree=true

#@ load("@ytt:data", "data")
#@ load("@ytt:base64", "base64")
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-data-values
  namespace: tanzu-system-monitoring
stringData:
  #@yaml/text-templated-strings
  values.yaml: |-
    #@data/values
    #@overlay/match-child-defaults missing_ok=True
    ---
    monitoring:
      grafana:
        secret:
          admin_password: (@= base64.encode("admin") @)
        ingress:
          enabled: false
    dashboards:
      default_json: |
        (@= "\n    ".join(data.read("default.json").splitlines()) @)
      kubernetes_apiserver_json: |
        (@= "\n    ".join(data.read("kubernetes-apiserver.json").splitlines()) @)
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-node-exporter-dashboard-values
  namespace: tanzu-system-monitoring
stringData:
  #@yaml/text-templated-strings
  node-exporter-dashboard-json.yaml: |
    #@data/values
    #@overlay/match-child-defaults missing_ok=True
    ---
    dashboards:
      #! https://raw.githubusercontent.com/bosh-prometheus/prometheus-boshrelease/master/jobs/system_dashboards/templates/system_disk_performance.json
      system_disk_performance_json:  |
        (@= "\n    ".join(data.read("system_disk_performance.json").splitlines()) @)
      #! https://raw.githubusercontent.com/bosh-prometheus/prometheus-boshrelease/master/jobs/system_dashboards/templates/system_disk_space.json
      system_disk_space_json: |
        (@= "\n    ".join(data.read("system_disk_space.json").splitlines()) @)
      #! https://raw.githubusercontent.com/bosh-prometheus/prometheus-boshrelease/master/jobs/system_dashboards/templates/system_overview.json
      system_overview_json: |
        (@= "\n    ".join(data.read("system_overview.json").splitlines()) @)